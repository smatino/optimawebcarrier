/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/main/java/repository/Repository.e.vm.java
 */
package com.optima.opticarrier.repository;

import javax.inject.Named;
import javax.inject.Singleton;

import org.springframework.transaction.annotation.Transactional;

import com.optima.opticarrier.domain.SbcCpsRequest;
import com.optima.opticarrier.repository.support.GenericRepository;

/**
 * {@link GenericRepository} for {@link SbcCpsRequest} 
 */
@Named
@Singleton
public class SbcCpsRequestRepository extends GenericRepository<SbcCpsRequest, Integer> {

    public SbcCpsRequestRepository() {
        super(SbcCpsRequest.class);
    }

    @Override
    public SbcCpsRequest getNew() {
        return new SbcCpsRequest();
    }

    @Override
    public SbcCpsRequest getNewWithDefaults() {
        return getNew().withDefaults();
    }

    /**
     * Return the persistent instance of {@link SbcCpsRequest} with the given unique property value requestId,
     * or null if there is no such persistent instance.
     *
     * @param requestId the unique value
     * @return the corresponding {@link SbcCpsRequest} persistent instance or null
     */
    @Transactional(readOnly = true)
    public SbcCpsRequest getByRequestId(String requestId) {
        return findUniqueOrNone(new SbcCpsRequest().requestId(requestId));
    }

    /**
     * Delete a {@link SbcCpsRequest} using the unique column requestId
     *
     * @param requestId the unique value
     */
    @Transactional
    public void deleteByRequestId(String requestId) {
        delete(getByRequestId(requestId));
    }
}