/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.optima.opticarrier.web.domain;

import static com.optima.opticarrier.repository.support.PropertySelector.newPropertySelector;
import static com.optima.opticarrier.repository.support.Range.newRange;

import java.util.Date;

import javax.inject.Named;

import com.optima.opticarrier.domain.CpsDeactivationNotification;
import com.optima.opticarrier.domain.CpsDeactivationNotification_;
import com.optima.opticarrier.repository.support.PropertySelector;
import com.optima.opticarrier.repository.support.Range;
import com.optima.opticarrier.repository.support.SearchParameters;
import com.optima.opticarrier.web.domain.support.GenericSearchForm;
import com.optima.opticarrier.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link CpsDeactivationNotification}.
 * It exposes a {@link CpsDeactivationNotification} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class CpsDeactivationNotificationSearchForm extends GenericSearchForm<CpsDeactivationNotification, Integer, CpsDeactivationNotificationSearchForm> {
    private static final long serialVersionUID = 1L;
    protected CpsDeactivationNotification cpsDeactivationNotification = new CpsDeactivationNotification();
    protected Range<CpsDeactivationNotification, Date> dataNotificaRange = newRange(CpsDeactivationNotification_.dataNotifica);
    protected Range<CpsDeactivationNotification, Date> dataEsplitamentoRange = newRange(CpsDeactivationNotification_.dataEsplitamento);
    protected PropertySelector<CpsDeactivationNotification, String> codiceFornitoreSelector = newPropertySelector(CpsDeactivationNotification_.codiceFornitore);
    protected PropertySelector<CpsDeactivationNotification, String> dnSelector = newPropertySelector(CpsDeactivationNotification_.dn);
    protected PropertySelector<CpsDeactivationNotification, String> dataSottoscrizioneContrattoSelector = newPropertySelector(CpsDeactivationNotification_.dataSottoscrizioneContratto);
    protected PropertySelector<CpsDeactivationNotification, String> codiceMotivoRifiutoSelector = newPropertySelector(CpsDeactivationNotification_.codiceMotivoRifiuto);
    protected PropertySelector<CpsDeactivationNotification, String> motivoRifiutoSelector = newPropertySelector(CpsDeactivationNotification_.motivoRifiuto);
    protected PropertySelector<CpsDeactivationNotification, String> statusSelector = newPropertySelector(CpsDeactivationNotification_.status);

    public CpsDeactivationNotification getCpsDeactivationNotification() {
        return cpsDeactivationNotification;
    }

    @Override
    protected CpsDeactivationNotification getEntity() {
        return getCpsDeactivationNotification();
    }

    @Override
    public CpsDeactivationNotificationSearchForm newInstance() {
        return new CpsDeactivationNotificationSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.range(dataNotificaRange, dataEsplitamentoRange);
        sp.property(codiceFornitoreSelector, dnSelector, dataSottoscrizioneContrattoSelector, codiceMotivoRifiutoSelector, motivoRifiutoSelector,
                statusSelector);
        return sp;
    }

    @Override
    public void resetWithOther(CpsDeactivationNotificationSearchForm other) {
        this.cpsDeactivationNotification = other.getCpsDeactivationNotification();
        this.dataNotificaRange = other.getDataNotificaRange();
        this.dataEsplitamentoRange = other.getDataEsplitamentoRange();
        this.codiceFornitoreSelector = other.getCodiceFornitoreSelector();
        this.dnSelector = other.getDnSelector();
        this.dataSottoscrizioneContrattoSelector = other.getDataSottoscrizioneContrattoSelector();
        this.codiceMotivoRifiutoSelector = other.getCodiceMotivoRifiutoSelector();
        this.motivoRifiutoSelector = other.getMotivoRifiutoSelector();
        this.statusSelector = other.getStatusSelector();
    }

    // Ranges
    public Range<CpsDeactivationNotification, Date> getDataNotificaRange() {
        return dataNotificaRange;
    }

    public Range<CpsDeactivationNotification, Date> getDataEsplitamentoRange() {
        return dataEsplitamentoRange;
    }

    // Property selectors
    public PropertySelector<CpsDeactivationNotification, String> getCodiceFornitoreSelector() {
        return codiceFornitoreSelector;
    }

    public PropertySelector<CpsDeactivationNotification, String> getDnSelector() {
        return dnSelector;
    }

    public PropertySelector<CpsDeactivationNotification, String> getDataSottoscrizioneContrattoSelector() {
        return dataSottoscrizioneContrattoSelector;
    }

    public PropertySelector<CpsDeactivationNotification, String> getCodiceMotivoRifiutoSelector() {
        return codiceMotivoRifiutoSelector;
    }

    public PropertySelector<CpsDeactivationNotification, String> getMotivoRifiutoSelector() {
        return motivoRifiutoSelector;
    }

    public PropertySelector<CpsDeactivationNotification, String> getStatusSelector() {
        return statusSelector;
    }
}
