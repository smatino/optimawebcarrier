/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.optima.opticarrier.web.domain;

import static com.optima.opticarrier.repository.support.PropertySelector.newPropertySelector;
import static com.optima.opticarrier.repository.support.Range.newRange;

import java.util.Date;

import javax.inject.Named;

import com.optima.opticarrier.domain.BtRequest;
import com.optima.opticarrier.domain.BtRequest_;
import com.optima.opticarrier.repository.support.PropertySelector;
import com.optima.opticarrier.repository.support.Range;
import com.optima.opticarrier.repository.support.SearchParameters;
import com.optima.opticarrier.web.domain.support.GenericSearchForm;
import com.optima.opticarrier.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link BtRequest}.
 * It exposes a {@link BtRequest} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class BtRequestSearchForm extends GenericSearchForm<BtRequest, Integer, BtRequestSearchForm> {
    private static final long serialVersionUID = 1L;
    protected BtRequest btRequest = new BtRequest();
    protected Range<BtRequest, Date> dateInsertRange = newRange(BtRequest_.dateInsert);
    protected Range<BtRequest, Integer> fileIdRange = newRange(BtRequest_.fileId);
    protected PropertySelector<BtRequest, String> xmlSelector = newPropertySelector(BtRequest_.xml);
    protected PropertySelector<BtRequest, String> statusSelector = newPropertySelector(BtRequest_.status);
    protected PropertySelector<BtRequest, Integer> fileIdSelector = newPropertySelector(BtRequest_.fileId);

    public BtRequest getBtRequest() {
        return btRequest;
    }

    @Override
    protected BtRequest getEntity() {
        return getBtRequest();
    }

    @Override
    public BtRequestSearchForm newInstance() {
        return new BtRequestSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.range(dateInsertRange, fileIdRange);
        sp.property(xmlSelector, statusSelector, fileIdSelector);
        return sp;
    }

    @Override
    public void resetWithOther(BtRequestSearchForm other) {
        this.btRequest = other.getBtRequest();
        this.dateInsertRange = other.getDateInsertRange();
        this.fileIdRange = other.getFileIdRange();
        this.xmlSelector = other.getXmlSelector();
        this.statusSelector = other.getStatusSelector();
        this.fileIdSelector = other.getFileIdSelector();
    }

    // Ranges
    public Range<BtRequest, Date> getDateInsertRange() {
        return dateInsertRange;
    }

    public Range<BtRequest, Integer> getFileIdRange() {
        return fileIdRange;
    }

    // Property selectors
    public PropertySelector<BtRequest, String> getXmlSelector() {
        return xmlSelector;
    }

    public PropertySelector<BtRequest, String> getStatusSelector() {
        return statusSelector;
    }

    public PropertySelector<BtRequest, Integer> getFileIdSelector() {
        return fileIdSelector;
    }
}
