/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.optima.opticarrier.web.domain;

import static com.optima.opticarrier.repository.support.PropertySelector.newPropertySelector;
import static com.optima.opticarrier.repository.support.Range.newRange;

import javax.inject.Named;

import com.optima.opticarrier.domain.CpsQuoteResponse;
import com.optima.opticarrier.domain.CpsQuoteResponse_;
import com.optima.opticarrier.domain.OloCps;
import com.optima.opticarrier.domain.SbcFileResponse;
import com.optima.opticarrier.repository.support.PropertySelector;
import com.optima.opticarrier.repository.support.Range;
import com.optima.opticarrier.repository.support.SearchParameters;
import com.optima.opticarrier.web.domain.support.GenericSearchForm;
import com.optima.opticarrier.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link CpsQuoteResponse}.
 * It exposes a {@link CpsQuoteResponse} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class CpsQuoteResponseSearchForm extends GenericSearchForm<CpsQuoteResponse, Integer, CpsQuoteResponseSearchForm> {
    private static final long serialVersionUID = 1L;
    protected CpsQuoteResponse cpsQuoteResponse = new CpsQuoteResponse();
    protected Range<CpsQuoteResponse, Integer> quantitaRichestaRange = newRange(CpsQuoteResponse_.quantitaRichesta);
    protected Range<CpsQuoteResponse, Integer> volumiMensiliAssegnatiRange = newRange(CpsQuoteResponse_.volumiMensiliAssegnati);
    protected Range<CpsQuoteResponse, Integer> tolleranzaMensileRange = newRange(CpsQuoteResponse_.tolleranzaMensile);
    protected Range<CpsQuoteResponse, Integer> volumiGiornalieriAssegnatiRange = newRange(CpsQuoteResponse_.volumiGiornalieriAssegnati);
    protected Range<CpsQuoteResponse, Integer> tolleranzaGiornalieraRange = newRange(CpsQuoteResponse_.tolleranzaGiornaliera);
    protected Range<CpsQuoteResponse, Integer> giorniLavorativiRange = newRange(CpsQuoteResponse_.giorniLavorativi);
    protected PropertySelector<CpsQuoteResponse, String> codiceAreaSelector = newPropertySelector(CpsQuoteResponse_.codiceArea);
    protected PropertySelector<CpsQuoteResponse, String> descrizioneAreaSelector = newPropertySelector(CpsQuoteResponse_.descrizioneArea);
    protected PropertySelector<CpsQuoteResponse, Integer> quantitaRichestaSelector = newPropertySelector(CpsQuoteResponse_.quantitaRichesta);
    protected PropertySelector<CpsQuoteResponse, Integer> volumiMensiliAssegnatiSelector = newPropertySelector(CpsQuoteResponse_.volumiMensiliAssegnati);
    protected PropertySelector<CpsQuoteResponse, Integer> tolleranzaMensileSelector = newPropertySelector(CpsQuoteResponse_.tolleranzaMensile);
    protected PropertySelector<CpsQuoteResponse, Integer> volumiGiornalieriAssegnatiSelector = newPropertySelector(CpsQuoteResponse_.volumiGiornalieriAssegnati);
    protected PropertySelector<CpsQuoteResponse, Integer> tolleranzaGiornalieraSelector = newPropertySelector(CpsQuoteResponse_.tolleranzaGiornaliera);
    protected PropertySelector<CpsQuoteResponse, Integer> giorniLavorativiSelector = newPropertySelector(CpsQuoteResponse_.giorniLavorativi);
    protected PropertySelector<CpsQuoteResponse, SbcFileResponse> fileSelector = newPropertySelector(CpsQuoteResponse_.file);
    protected PropertySelector<CpsQuoteResponse, OloCps> oloSelector = newPropertySelector(CpsQuoteResponse_.olo);

    public CpsQuoteResponse getCpsQuoteResponse() {
        return cpsQuoteResponse;
    }

    @Override
    protected CpsQuoteResponse getEntity() {
        return getCpsQuoteResponse();
    }

    @Override
    public CpsQuoteResponseSearchForm newInstance() {
        return new CpsQuoteResponseSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.range(quantitaRichestaRange, volumiMensiliAssegnatiRange, tolleranzaMensileRange, volumiGiornalieriAssegnatiRange, tolleranzaGiornalieraRange,
                giorniLavorativiRange);
        sp.property(codiceAreaSelector, descrizioneAreaSelector, quantitaRichestaSelector, volumiMensiliAssegnatiSelector, tolleranzaMensileSelector,
                volumiGiornalieriAssegnatiSelector, tolleranzaGiornalieraSelector, giorniLavorativiSelector);
        sp.property(fileSelector, oloSelector);
        return sp;
    }

    @Override
    public void resetWithOther(CpsQuoteResponseSearchForm other) {
        this.cpsQuoteResponse = other.getCpsQuoteResponse();
        this.quantitaRichestaRange = other.getQuantitaRichestaRange();
        this.volumiMensiliAssegnatiRange = other.getVolumiMensiliAssegnatiRange();
        this.tolleranzaMensileRange = other.getTolleranzaMensileRange();
        this.volumiGiornalieriAssegnatiRange = other.getVolumiGiornalieriAssegnatiRange();
        this.tolleranzaGiornalieraRange = other.getTolleranzaGiornalieraRange();
        this.giorniLavorativiRange = other.getGiorniLavorativiRange();
        this.codiceAreaSelector = other.getCodiceAreaSelector();
        this.descrizioneAreaSelector = other.getDescrizioneAreaSelector();
        this.quantitaRichestaSelector = other.getQuantitaRichestaSelector();
        this.volumiMensiliAssegnatiSelector = other.getVolumiMensiliAssegnatiSelector();
        this.tolleranzaMensileSelector = other.getTolleranzaMensileSelector();
        this.volumiGiornalieriAssegnatiSelector = other.getVolumiGiornalieriAssegnatiSelector();
        this.tolleranzaGiornalieraSelector = other.getTolleranzaGiornalieraSelector();
        this.giorniLavorativiSelector = other.getGiorniLavorativiSelector();
        this.fileSelector = other.getFileSelector();
        this.oloSelector = other.getOloSelector();
    }

    // Ranges
    public Range<CpsQuoteResponse, Integer> getQuantitaRichestaRange() {
        return quantitaRichestaRange;
    }

    public Range<CpsQuoteResponse, Integer> getVolumiMensiliAssegnatiRange() {
        return volumiMensiliAssegnatiRange;
    }

    public Range<CpsQuoteResponse, Integer> getTolleranzaMensileRange() {
        return tolleranzaMensileRange;
    }

    public Range<CpsQuoteResponse, Integer> getVolumiGiornalieriAssegnatiRange() {
        return volumiGiornalieriAssegnatiRange;
    }

    public Range<CpsQuoteResponse, Integer> getTolleranzaGiornalieraRange() {
        return tolleranzaGiornalieraRange;
    }

    public Range<CpsQuoteResponse, Integer> getGiorniLavorativiRange() {
        return giorniLavorativiRange;
    }

    // Property selectors
    public PropertySelector<CpsQuoteResponse, String> getCodiceAreaSelector() {
        return codiceAreaSelector;
    }

    public PropertySelector<CpsQuoteResponse, String> getDescrizioneAreaSelector() {
        return descrizioneAreaSelector;
    }

    public PropertySelector<CpsQuoteResponse, Integer> getQuantitaRichestaSelector() {
        return quantitaRichestaSelector;
    }

    public PropertySelector<CpsQuoteResponse, Integer> getVolumiMensiliAssegnatiSelector() {
        return volumiMensiliAssegnatiSelector;
    }

    public PropertySelector<CpsQuoteResponse, Integer> getTolleranzaMensileSelector() {
        return tolleranzaMensileSelector;
    }

    public PropertySelector<CpsQuoteResponse, Integer> getVolumiGiornalieriAssegnatiSelector() {
        return volumiGiornalieriAssegnatiSelector;
    }

    public PropertySelector<CpsQuoteResponse, Integer> getTolleranzaGiornalieraSelector() {
        return tolleranzaGiornalieraSelector;
    }

    public PropertySelector<CpsQuoteResponse, Integer> getGiorniLavorativiSelector() {
        return giorniLavorativiSelector;
    }

    // Relation selectors
    public PropertySelector<CpsQuoteResponse, SbcFileResponse> getFileSelector() {
        return fileSelector;
    }

    public PropertySelector<CpsQuoteResponse, OloCps> getOloSelector() {
        return oloSelector;
    }
}
