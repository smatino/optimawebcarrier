/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.optima.opticarrier.web.domain;

import static com.optima.opticarrier.repository.support.PropertySelector.newPropertySelector;
import static com.optima.opticarrier.repository.support.Range.newRange;

import javax.inject.Named;

import com.optima.opticarrier.domain.Response;
import com.optima.opticarrier.domain.Response_;
import com.optima.opticarrier.repository.support.PropertySelector;
import com.optima.opticarrier.repository.support.Range;
import com.optima.opticarrier.repository.support.SearchParameters;
import com.optima.opticarrier.web.domain.support.GenericSearchForm;
import com.optima.opticarrier.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link Response}.
 * It exposes a {@link Response} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class ResponseSearchForm extends GenericSearchForm<Response, Integer, ResponseSearchForm> {
    private static final long serialVersionUID = 1L;
    protected Response response = new Response();
    protected Range<Response, Integer> idSBCRange = newRange(Response_.idSBC);
    protected Range<Response, Integer> actionTypeRange = newRange(Response_.actionType);
    protected Range<Response, Integer> batchIdRange = newRange(Response_.batchId);
    protected Range<Response, Integer> oloIdRange = newRange(Response_.oloId);
    protected PropertySelector<Response, Integer> idSBCSelector = newPropertySelector(Response_.idSBC);
    protected PropertySelector<Response, Integer> actionTypeSelector = newPropertySelector(Response_.actionType);
    protected PropertySelector<Response, String> dataCambiamentoStatoSelector = newPropertySelector(Response_.dataCambiamentoStato);
    protected PropertySelector<Response, String> codiceErroreSelector = newPropertySelector(Response_.codiceErrore);
    protected PropertySelector<Response, String> descrizioneErroreSelector = newPropertySelector(Response_.descrizioneErrore);
    protected PropertySelector<Response, String> nomeFileDiOrigineRichiestaSelector = newPropertySelector(Response_.nomeFileDiOrigineRichiesta);
    protected PropertySelector<Response, String> progressivoRichiestaSelector = newPropertySelector(Response_.progressivoRichiesta);
    protected PropertySelector<Response, String> dataSpedizioneFileSelector = newPropertySelector(Response_.dataSpedizioneFile);
    protected PropertySelector<Response, String> tipoOperazioneSelector = newPropertySelector(Response_.tipoOperazione);
    protected PropertySelector<Response, String> tipoServizioSelector = newPropertySelector(Response_.tipoServizio);
    protected PropertySelector<Response, String> tipoLineaSelector = newPropertySelector(Response_.tipoLinea);
    protected PropertySelector<Response, String> tipoAttivazioneSelector = newPropertySelector(Response_.tipoAttivazione);
    protected PropertySelector<Response, String> numeroLineeSelector = newPropertySelector(Response_.numeroLinee);
    protected PropertySelector<Response, String> cliSelector = newPropertySelector(Response_.cli);
    protected PropertySelector<Response, String> tipoNotificaSelector = newPropertySelector(Response_.tipoNotifica);
    protected PropertySelector<Response, String> statoOrdineSelector = newPropertySelector(Response_.statoOrdine);
    protected PropertySelector<Response, String> typeSelector = newPropertySelector(Response_.type);
    protected PropertySelector<Response, String> dnSelector = newPropertySelector(Response_.dn);
    protected PropertySelector<Response, String> dataEsplitamentoSelector = newPropertySelector(Response_.dataEsplitamento);
    protected PropertySelector<Response, String> codiceCausaleAnnullamentoSelector = newPropertySelector(Response_.codiceCausaleAnnullamento);
    protected PropertySelector<Response, String> descrizioneCausaleAnnullamentoSelector = newPropertySelector(Response_.descrizioneCausaleAnnullamento);
    protected PropertySelector<Response, String> dataAnnullamentoSelector = newPropertySelector(Response_.dataAnnullamento);
    protected PropertySelector<Response, String> codiceCausaleSospensioneSelector = newPropertySelector(Response_.codiceCausaleSospensione);
    protected PropertySelector<Response, String> descrizioneCausaleSelector = newPropertySelector(Response_.descrizioneCausale);
    protected PropertySelector<Response, String> dataSospensioneSelector = newPropertySelector(Response_.dataSospensione);
    protected PropertySelector<Response, Integer> batchIdSelector = newPropertySelector(Response_.batchId);
    protected PropertySelector<Response, Integer> oloIdSelector = newPropertySelector(Response_.oloId);
    protected PropertySelector<Response, Boolean> variationSelector = newPropertySelector(Response_.variation);
    protected PropertySelector<Response, String> responseCodeSelector = newPropertySelector(Response_.responseCode);
    protected PropertySelector<Response, String> responseDescSelector = newPropertySelector(Response_.responseDesc);

    public Response getResponse() {
        return response;
    }

    @Override
    protected Response getEntity() {
        return getResponse();
    }

    @Override
    public ResponseSearchForm newInstance() {
        return new ResponseSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.range(idSBCRange, actionTypeRange, batchIdRange, oloIdRange);
        sp.property(idSBCSelector, actionTypeSelector, dataCambiamentoStatoSelector, codiceErroreSelector, descrizioneErroreSelector,
                nomeFileDiOrigineRichiestaSelector, progressivoRichiestaSelector, dataSpedizioneFileSelector, tipoOperazioneSelector, tipoServizioSelector,
                tipoLineaSelector, tipoAttivazioneSelector, numeroLineeSelector, cliSelector, tipoNotificaSelector, statoOrdineSelector, typeSelector,
                dnSelector, dataEsplitamentoSelector, codiceCausaleAnnullamentoSelector, descrizioneCausaleAnnullamentoSelector, dataAnnullamentoSelector,
                codiceCausaleSospensioneSelector, descrizioneCausaleSelector, dataSospensioneSelector, batchIdSelector, oloIdSelector, variationSelector,
                responseCodeSelector, responseDescSelector);
        return sp;
    }

    @Override
    public void resetWithOther(ResponseSearchForm other) {
        this.response = other.getResponse();
        this.idSBCRange = other.getIdSBCRange();
        this.actionTypeRange = other.getActionTypeRange();
        this.batchIdRange = other.getBatchIdRange();
        this.oloIdRange = other.getOloIdRange();
        this.idSBCSelector = other.getIdSBCSelector();
        this.actionTypeSelector = other.getActionTypeSelector();
        this.dataCambiamentoStatoSelector = other.getDataCambiamentoStatoSelector();
        this.codiceErroreSelector = other.getCodiceErroreSelector();
        this.descrizioneErroreSelector = other.getDescrizioneErroreSelector();
        this.nomeFileDiOrigineRichiestaSelector = other.getNomeFileDiOrigineRichiestaSelector();
        this.progressivoRichiestaSelector = other.getProgressivoRichiestaSelector();
        this.dataSpedizioneFileSelector = other.getDataSpedizioneFileSelector();
        this.tipoOperazioneSelector = other.getTipoOperazioneSelector();
        this.tipoServizioSelector = other.getTipoServizioSelector();
        this.tipoLineaSelector = other.getTipoLineaSelector();
        this.tipoAttivazioneSelector = other.getTipoAttivazioneSelector();
        this.numeroLineeSelector = other.getNumeroLineeSelector();
        this.cliSelector = other.getCliSelector();
        this.tipoNotificaSelector = other.getTipoNotificaSelector();
        this.statoOrdineSelector = other.getStatoOrdineSelector();
        this.typeSelector = other.getTypeSelector();
        this.dnSelector = other.getDnSelector();
        this.dataEsplitamentoSelector = other.getDataEsplitamentoSelector();
        this.codiceCausaleAnnullamentoSelector = other.getCodiceCausaleAnnullamentoSelector();
        this.descrizioneCausaleAnnullamentoSelector = other.getDescrizioneCausaleAnnullamentoSelector();
        this.dataAnnullamentoSelector = other.getDataAnnullamentoSelector();
        this.codiceCausaleSospensioneSelector = other.getCodiceCausaleSospensioneSelector();
        this.descrizioneCausaleSelector = other.getDescrizioneCausaleSelector();
        this.dataSospensioneSelector = other.getDataSospensioneSelector();
        this.batchIdSelector = other.getBatchIdSelector();
        this.oloIdSelector = other.getOloIdSelector();
        this.variationSelector = other.getVariationSelector();
        this.responseCodeSelector = other.getResponseCodeSelector();
        this.responseDescSelector = other.getResponseDescSelector();
    }

    // Ranges
    public Range<Response, Integer> getIdSBCRange() {
        return idSBCRange;
    }

    public Range<Response, Integer> getActionTypeRange() {
        return actionTypeRange;
    }

    public Range<Response, Integer> getBatchIdRange() {
        return batchIdRange;
    }

    public Range<Response, Integer> getOloIdRange() {
        return oloIdRange;
    }

    // Property selectors
    public PropertySelector<Response, Integer> getIdSBCSelector() {
        return idSBCSelector;
    }

    public PropertySelector<Response, Integer> getActionTypeSelector() {
        return actionTypeSelector;
    }

    public PropertySelector<Response, String> getDataCambiamentoStatoSelector() {
        return dataCambiamentoStatoSelector;
    }

    public PropertySelector<Response, String> getCodiceErroreSelector() {
        return codiceErroreSelector;
    }

    public PropertySelector<Response, String> getDescrizioneErroreSelector() {
        return descrizioneErroreSelector;
    }

    public PropertySelector<Response, String> getNomeFileDiOrigineRichiestaSelector() {
        return nomeFileDiOrigineRichiestaSelector;
    }

    public PropertySelector<Response, String> getProgressivoRichiestaSelector() {
        return progressivoRichiestaSelector;
    }

    public PropertySelector<Response, String> getDataSpedizioneFileSelector() {
        return dataSpedizioneFileSelector;
    }

    public PropertySelector<Response, String> getTipoOperazioneSelector() {
        return tipoOperazioneSelector;
    }

    public PropertySelector<Response, String> getTipoServizioSelector() {
        return tipoServizioSelector;
    }

    public PropertySelector<Response, String> getTipoLineaSelector() {
        return tipoLineaSelector;
    }

    public PropertySelector<Response, String> getTipoAttivazioneSelector() {
        return tipoAttivazioneSelector;
    }

    public PropertySelector<Response, String> getNumeroLineeSelector() {
        return numeroLineeSelector;
    }

    public PropertySelector<Response, String> getCliSelector() {
        return cliSelector;
    }

    public PropertySelector<Response, String> getTipoNotificaSelector() {
        return tipoNotificaSelector;
    }

    public PropertySelector<Response, String> getStatoOrdineSelector() {
        return statoOrdineSelector;
    }

    public PropertySelector<Response, String> getTypeSelector() {
        return typeSelector;
    }

    public PropertySelector<Response, String> getDnSelector() {
        return dnSelector;
    }

    public PropertySelector<Response, String> getDataEsplitamentoSelector() {
        return dataEsplitamentoSelector;
    }

    public PropertySelector<Response, String> getCodiceCausaleAnnullamentoSelector() {
        return codiceCausaleAnnullamentoSelector;
    }

    public PropertySelector<Response, String> getDescrizioneCausaleAnnullamentoSelector() {
        return descrizioneCausaleAnnullamentoSelector;
    }

    public PropertySelector<Response, String> getDataAnnullamentoSelector() {
        return dataAnnullamentoSelector;
    }

    public PropertySelector<Response, String> getCodiceCausaleSospensioneSelector() {
        return codiceCausaleSospensioneSelector;
    }

    public PropertySelector<Response, String> getDescrizioneCausaleSelector() {
        return descrizioneCausaleSelector;
    }

    public PropertySelector<Response, String> getDataSospensioneSelector() {
        return dataSospensioneSelector;
    }

    public PropertySelector<Response, Integer> getBatchIdSelector() {
        return batchIdSelector;
    }

    public PropertySelector<Response, Integer> getOloIdSelector() {
        return oloIdSelector;
    }

    public PropertySelector<Response, Boolean> getVariationSelector() {
        return variationSelector;
    }

    public PropertySelector<Response, String> getResponseCodeSelector() {
        return responseCodeSelector;
    }

    public PropertySelector<Response, String> getResponseDescSelector() {
        return responseDescSelector;
    }
}
