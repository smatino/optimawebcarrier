/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.optima.opticarrier.web.domain;

import static com.optima.opticarrier.repository.support.PropertySelector.newPropertySelector;
import static com.optima.opticarrier.repository.support.Range.newRange;

import java.util.Date;

import javax.inject.Named;

import com.optima.opticarrier.domain.OloCps;
import com.optima.opticarrier.domain.SbcFileResponse;
import com.optima.opticarrier.domain.SbcWlrResponse;
import com.optima.opticarrier.domain.SbcWlrResponse_;
import com.optima.opticarrier.repository.support.PropertySelector;
import com.optima.opticarrier.repository.support.Range;
import com.optima.opticarrier.repository.support.SearchParameters;
import com.optima.opticarrier.web.domain.support.GenericSearchForm;
import com.optima.opticarrier.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link SbcWlrResponse}.
 * It exposes a {@link SbcWlrResponse} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class SbcWlrResponseSearchForm extends GenericSearchForm<SbcWlrResponse, Integer, SbcWlrResponseSearchForm> {
    private static final long serialVersionUID = 1L;
    protected SbcWlrResponse sbcWlrResponse = new SbcWlrResponse();
    protected Range<SbcWlrResponse, Date> dataEstrazioneWLRange = newRange(SbcWlrResponse_.dataEstrazioneWL);
    protected Range<SbcWlrResponse, Date> dataAttivazioneRange = newRange(SbcWlrResponse_.dataAttivazione);
    protected Range<SbcWlrResponse, Date> dataValidazioneFormaleContrattuaRange = newRange(SbcWlrResponse_.dataValidazioneFormaleContrattua);
    protected Range<SbcWlrResponse, Date> dataValidazioneTecnicoGestionaleRange = newRange(SbcWlrResponse_.dataValidazioneTecnicoGestionale);
    protected Range<SbcWlrResponse, Date> dataPrevistaSoluzioneRange = newRange(SbcWlrResponse_.dataPrevistaSoluzione);
    protected Range<SbcWlrResponse, Date> taAnnullamentoRange = newRange(SbcWlrResponse_.taAnnullamento);
    protected Range<SbcWlrResponse, Date> dataEspletamentoRange = newRange(SbcWlrResponse_.dataEspletamento);
    protected Range<SbcWlrResponse, Date> dataContattoRange = newRange(SbcWlrResponse_.dataContatto);
    protected Range<SbcWlrResponse, Date> taInizioLavorazioneRange = newRange(SbcWlrResponse_.taInizioLavorazione);
    protected Range<SbcWlrResponse, Date> dataSospensioneRange = newRange(SbcWlrResponse_.dataSospensione);
    protected Range<SbcWlrResponse, Date> dataDRORange = newRange(SbcWlrResponse_.dataDRO);
    protected Range<SbcWlrResponse, Date> dataNotificaRange = newRange(SbcWlrResponse_.dataNotifica);
    protected PropertySelector<SbcWlrResponse, String> tipoNotificaSelector = newPropertySelector(SbcWlrResponse_.tipoNotifica);
    protected PropertySelector<SbcWlrResponse, String> borchiaISDNSelector = newPropertySelector(SbcWlrResponse_.borchiaISDN);
    protected PropertySelector<SbcWlrResponse, String> codicePiattaformaSelector = newPropertySelector(SbcWlrResponse_.codicePiattaforma);
    protected PropertySelector<SbcWlrResponse, String> dnSelector = newPropertySelector(SbcWlrResponse_.dn);
    protected PropertySelector<SbcWlrResponse, String> flagLineaBtsNakedSelector = newPropertySelector(SbcWlrResponse_.flagLineaBtsNaked);
    protected PropertySelector<SbcWlrResponse, String> noteSelector = newPropertySelector(SbcWlrResponse_.note);
    protected PropertySelector<SbcWlrResponse, String> nuovoDNSelector = newPropertySelector(SbcWlrResponse_.nuovoDN);
    protected PropertySelector<SbcWlrResponse, String> cognomeReferenteSelector = newPropertySelector(SbcWlrResponse_.cognomeReferente);
    protected PropertySelector<SbcWlrResponse, String> nomeReferenteSelector = newPropertySelector(SbcWlrResponse_.nomeReferente);
    protected PropertySelector<SbcWlrResponse, String> qualificaRefSelector = newPropertySelector(SbcWlrResponse_.qualificaRef);
    protected PropertySelector<SbcWlrResponse, String> telefonoFissoReferenteSelector = newPropertySelector(SbcWlrResponse_.telefonoFissoReferente);
    protected PropertySelector<SbcWlrResponse, String> telefonoMobileReferenteSelector = newPropertySelector(SbcWlrResponse_.telefonoMobileReferente);
    protected PropertySelector<SbcWlrResponse, String> codiceMotivoRifiutoSelector = newPropertySelector(SbcWlrResponse_.codiceMotivoRifiuto);
    protected PropertySelector<SbcWlrResponse, String> motivoRifiutoSelector = newPropertySelector(SbcWlrResponse_.motivoRifiuto);
    protected PropertySelector<SbcWlrResponse, String> tipoCausaleRifiutoSelector = newPropertySelector(SbcWlrResponse_.tipoCausaleRifiuto);
    protected PropertySelector<SbcWlrResponse, String> tipoDnSelector = newPropertySelector(SbcWlrResponse_.tipoDn);
    protected PropertySelector<SbcWlrResponse, String> tipoLineaSelector = newPropertySelector(SbcWlrResponse_.tipoLinea);
    protected PropertySelector<SbcWlrResponse, String> codiceCausaleAccodamentoSelector = newPropertySelector(SbcWlrResponse_.codiceCausaleAccodamento);
    protected PropertySelector<SbcWlrResponse, String> descrizioneCausaleAccodamentoSelector = newPropertySelector(SbcWlrResponse_.descrizioneCausaleAccodamento);
    protected PropertySelector<SbcWlrResponse, String> dimensioneCodaSelector = newPropertySelector(SbcWlrResponse_.dimensioneCoda);
    protected PropertySelector<SbcWlrResponse, String> posizioneCodaSelector = newPropertySelector(SbcWlrResponse_.posizioneCoda);
    protected PropertySelector<SbcWlrResponse, String> codiceCausaleAnnullamentoSelector = newPropertySelector(SbcWlrResponse_.codiceCausaleAnnullamento);
    protected PropertySelector<SbcWlrResponse, String> descrizioneCausaleAnnullamentoSelector = newPropertySelector(SbcWlrResponse_.descrizioneCausaleAnnullamento);
    protected PropertySelector<SbcWlrResponse, String> nuovaDASelector = newPropertySelector(SbcWlrResponse_.nuovaDA);
    protected PropertySelector<SbcWlrResponse, String> oraAppuntamentoSelector = newPropertySelector(SbcWlrResponse_.oraAppuntamento);
    protected PropertySelector<SbcWlrResponse, String> oraContattoSelector = newPropertySelector(SbcWlrResponse_.oraContatto);
    protected PropertySelector<SbcWlrResponse, String> referenteContattatoSelector = newPropertySelector(SbcWlrResponse_.referenteContattato);
    protected PropertySelector<SbcWlrResponse, String> telefonoReferenteContattatoSelector = newPropertySelector(SbcWlrResponse_.telefonoReferenteContattato);
    protected PropertySelector<SbcWlrResponse, String> fasciaOrariaSelector = newPropertySelector(SbcWlrResponse_.fasciaOraria);
    protected PropertySelector<SbcWlrResponse, String> nuovaDACSelector = newPropertySelector(SbcWlrResponse_.nuovaDAC);
    protected PropertySelector<SbcWlrResponse, String> flagPermessiSelector = newPropertySelector(SbcWlrResponse_.flagPermessi);
    protected PropertySelector<SbcWlrResponse, String> giorniPrevistiSelector = newPropertySelector(SbcWlrResponse_.giorniPrevisti);
    protected PropertySelector<SbcWlrResponse, String> codiceCausaleRimodulazioneSelector = newPropertySelector(SbcWlrResponse_.codiceCausaleRimodulazione);
    protected PropertySelector<SbcWlrResponse, String> descrizioneCausaleRimodulazioneSelector = newPropertySelector(SbcWlrResponse_.descrizioneCausaleRimodulazione);
    protected PropertySelector<SbcWlrResponse, String> nuovaDataPrevistaSoluzioneSelector = newPropertySelector(SbcWlrResponse_.nuovaDataPrevistaSoluzione);
    protected PropertySelector<SbcWlrResponse, String> codiceCausaleSospensioneSelector = newPropertySelector(SbcWlrResponse_.codiceCausaleSospensione);
    protected PropertySelector<SbcWlrResponse, String> descrizioneCausaleSelector = newPropertySelector(SbcWlrResponse_.descrizioneCausale);
    protected PropertySelector<SbcWlrResponse, String> codiceFornitoreSelector = newPropertySelector(SbcWlrResponse_.codiceFornitore);
    protected PropertySelector<SbcWlrResponse, String> codiceOrdineFornitoreSelector = newPropertySelector(SbcWlrResponse_.codiceOrdineFornitore);
    protected PropertySelector<SbcWlrResponse, String> statoOrdineSelector = newPropertySelector(SbcWlrResponse_.statoOrdine);
    protected PropertySelector<SbcWlrResponse, String> codiceOrdineRichiedenteSelector = newPropertySelector(SbcWlrResponse_.codiceOrdineRichiedente);
    protected PropertySelector<SbcWlrResponse, Boolean> variationSelector = newPropertySelector(SbcWlrResponse_.variation);
    protected PropertySelector<SbcWlrResponse, OloCps> oloSelector = newPropertySelector(SbcWlrResponse_.olo);
    protected PropertySelector<SbcWlrResponse, SbcFileResponse> fileSelector = newPropertySelector(SbcWlrResponse_.file);

    public SbcWlrResponse getSbcWlrResponse() {
        return sbcWlrResponse;
    }

    @Override
    protected SbcWlrResponse getEntity() {
        return getSbcWlrResponse();
    }

    @Override
    public SbcWlrResponseSearchForm newInstance() {
        return new SbcWlrResponseSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.range(dataEstrazioneWLRange, dataAttivazioneRange, dataValidazioneFormaleContrattuaRange, dataValidazioneTecnicoGestionaleRange,
                dataPrevistaSoluzioneRange, taAnnullamentoRange, dataEspletamentoRange, dataContattoRange, taInizioLavorazioneRange, dataSospensioneRange,
                dataDRORange, dataNotificaRange);
        sp.property(tipoNotificaSelector, borchiaISDNSelector, codicePiattaformaSelector, dnSelector, flagLineaBtsNakedSelector, noteSelector, nuovoDNSelector,
                cognomeReferenteSelector, nomeReferenteSelector, qualificaRefSelector, telefonoFissoReferenteSelector, telefonoMobileReferenteSelector,
                codiceMotivoRifiutoSelector, motivoRifiutoSelector, tipoCausaleRifiutoSelector, tipoDnSelector, tipoLineaSelector,
                codiceCausaleAccodamentoSelector, descrizioneCausaleAccodamentoSelector, dimensioneCodaSelector, posizioneCodaSelector,
                codiceCausaleAnnullamentoSelector, descrizioneCausaleAnnullamentoSelector, nuovaDASelector, oraAppuntamentoSelector, oraContattoSelector,
                referenteContattatoSelector, telefonoReferenteContattatoSelector, fasciaOrariaSelector, nuovaDACSelector, flagPermessiSelector,
                giorniPrevistiSelector, codiceCausaleRimodulazioneSelector, descrizioneCausaleRimodulazioneSelector, nuovaDataPrevistaSoluzioneSelector,
                codiceCausaleSospensioneSelector, descrizioneCausaleSelector, codiceFornitoreSelector, codiceOrdineFornitoreSelector, statoOrdineSelector,
                codiceOrdineRichiedenteSelector, variationSelector);
        sp.property(oloSelector, fileSelector);
        return sp;
    }

    @Override
    public void resetWithOther(SbcWlrResponseSearchForm other) {
        this.sbcWlrResponse = other.getSbcWlrResponse();
        this.dataEstrazioneWLRange = other.getDataEstrazioneWLRange();
        this.dataAttivazioneRange = other.getDataAttivazioneRange();
        this.dataValidazioneFormaleContrattuaRange = other.getDataValidazioneFormaleContrattuaRange();
        this.dataValidazioneTecnicoGestionaleRange = other.getDataValidazioneTecnicoGestionaleRange();
        this.dataPrevistaSoluzioneRange = other.getDataPrevistaSoluzioneRange();
        this.taAnnullamentoRange = other.getTaAnnullamentoRange();
        this.dataEspletamentoRange = other.getDataEspletamentoRange();
        this.dataContattoRange = other.getDataContattoRange();
        this.taInizioLavorazioneRange = other.getTaInizioLavorazioneRange();
        this.dataSospensioneRange = other.getDataSospensioneRange();
        this.dataDRORange = other.getDataDRORange();
        this.dataNotificaRange = other.getDataNotificaRange();
        this.tipoNotificaSelector = other.getTipoNotificaSelector();
        this.borchiaISDNSelector = other.getBorchiaISDNSelector();
        this.codicePiattaformaSelector = other.getCodicePiattaformaSelector();
        this.dnSelector = other.getDnSelector();
        this.flagLineaBtsNakedSelector = other.getFlagLineaBtsNakedSelector();
        this.noteSelector = other.getNoteSelector();
        this.nuovoDNSelector = other.getNuovoDNSelector();
        this.cognomeReferenteSelector = other.getCognomeReferenteSelector();
        this.nomeReferenteSelector = other.getNomeReferenteSelector();
        this.qualificaRefSelector = other.getQualificaRefSelector();
        this.telefonoFissoReferenteSelector = other.getTelefonoFissoReferenteSelector();
        this.telefonoMobileReferenteSelector = other.getTelefonoMobileReferenteSelector();
        this.codiceMotivoRifiutoSelector = other.getCodiceMotivoRifiutoSelector();
        this.motivoRifiutoSelector = other.getMotivoRifiutoSelector();
        this.tipoCausaleRifiutoSelector = other.getTipoCausaleRifiutoSelector();
        this.tipoDnSelector = other.getTipoDnSelector();
        this.tipoLineaSelector = other.getTipoLineaSelector();
        this.codiceCausaleAccodamentoSelector = other.getCodiceCausaleAccodamentoSelector();
        this.descrizioneCausaleAccodamentoSelector = other.getDescrizioneCausaleAccodamentoSelector();
        this.dimensioneCodaSelector = other.getDimensioneCodaSelector();
        this.posizioneCodaSelector = other.getPosizioneCodaSelector();
        this.codiceCausaleAnnullamentoSelector = other.getCodiceCausaleAnnullamentoSelector();
        this.descrizioneCausaleAnnullamentoSelector = other.getDescrizioneCausaleAnnullamentoSelector();
        this.nuovaDASelector = other.getNuovaDASelector();
        this.oraAppuntamentoSelector = other.getOraAppuntamentoSelector();
        this.oraContattoSelector = other.getOraContattoSelector();
        this.referenteContattatoSelector = other.getReferenteContattatoSelector();
        this.telefonoReferenteContattatoSelector = other.getTelefonoReferenteContattatoSelector();
        this.fasciaOrariaSelector = other.getFasciaOrariaSelector();
        this.nuovaDACSelector = other.getNuovaDACSelector();
        this.flagPermessiSelector = other.getFlagPermessiSelector();
        this.giorniPrevistiSelector = other.getGiorniPrevistiSelector();
        this.codiceCausaleRimodulazioneSelector = other.getCodiceCausaleRimodulazioneSelector();
        this.descrizioneCausaleRimodulazioneSelector = other.getDescrizioneCausaleRimodulazioneSelector();
        this.nuovaDataPrevistaSoluzioneSelector = other.getNuovaDataPrevistaSoluzioneSelector();
        this.codiceCausaleSospensioneSelector = other.getCodiceCausaleSospensioneSelector();
        this.descrizioneCausaleSelector = other.getDescrizioneCausaleSelector();
        this.codiceFornitoreSelector = other.getCodiceFornitoreSelector();
        this.codiceOrdineFornitoreSelector = other.getCodiceOrdineFornitoreSelector();
        this.statoOrdineSelector = other.getStatoOrdineSelector();
        this.codiceOrdineRichiedenteSelector = other.getCodiceOrdineRichiedenteSelector();
        this.variationSelector = other.getVariationSelector();
        this.oloSelector = other.getOloSelector();
        this.fileSelector = other.getFileSelector();
    }

    // Ranges
    public Range<SbcWlrResponse, Date> getDataEstrazioneWLRange() {
        return dataEstrazioneWLRange;
    }

    public Range<SbcWlrResponse, Date> getDataAttivazioneRange() {
        return dataAttivazioneRange;
    }

    public Range<SbcWlrResponse, Date> getDataValidazioneFormaleContrattuaRange() {
        return dataValidazioneFormaleContrattuaRange;
    }

    public Range<SbcWlrResponse, Date> getDataValidazioneTecnicoGestionaleRange() {
        return dataValidazioneTecnicoGestionaleRange;
    }

    public Range<SbcWlrResponse, Date> getDataPrevistaSoluzioneRange() {
        return dataPrevistaSoluzioneRange;
    }

    public Range<SbcWlrResponse, Date> getTaAnnullamentoRange() {
        return taAnnullamentoRange;
    }

    public Range<SbcWlrResponse, Date> getDataEspletamentoRange() {
        return dataEspletamentoRange;
    }

    public Range<SbcWlrResponse, Date> getDataContattoRange() {
        return dataContattoRange;
    }

    public Range<SbcWlrResponse, Date> getTaInizioLavorazioneRange() {
        return taInizioLavorazioneRange;
    }

    public Range<SbcWlrResponse, Date> getDataSospensioneRange() {
        return dataSospensioneRange;
    }

    public Range<SbcWlrResponse, Date> getDataDRORange() {
        return dataDRORange;
    }

    public Range<SbcWlrResponse, Date> getDataNotificaRange() {
        return dataNotificaRange;
    }

    // Property selectors
    public PropertySelector<SbcWlrResponse, String> getTipoNotificaSelector() {
        return tipoNotificaSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getBorchiaISDNSelector() {
        return borchiaISDNSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getCodicePiattaformaSelector() {
        return codicePiattaformaSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getDnSelector() {
        return dnSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getFlagLineaBtsNakedSelector() {
        return flagLineaBtsNakedSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getNoteSelector() {
        return noteSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getNuovoDNSelector() {
        return nuovoDNSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getCognomeReferenteSelector() {
        return cognomeReferenteSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getNomeReferenteSelector() {
        return nomeReferenteSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getQualificaRefSelector() {
        return qualificaRefSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getTelefonoFissoReferenteSelector() {
        return telefonoFissoReferenteSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getTelefonoMobileReferenteSelector() {
        return telefonoMobileReferenteSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getCodiceMotivoRifiutoSelector() {
        return codiceMotivoRifiutoSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getMotivoRifiutoSelector() {
        return motivoRifiutoSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getTipoCausaleRifiutoSelector() {
        return tipoCausaleRifiutoSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getTipoDnSelector() {
        return tipoDnSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getTipoLineaSelector() {
        return tipoLineaSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getCodiceCausaleAccodamentoSelector() {
        return codiceCausaleAccodamentoSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getDescrizioneCausaleAccodamentoSelector() {
        return descrizioneCausaleAccodamentoSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getDimensioneCodaSelector() {
        return dimensioneCodaSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getPosizioneCodaSelector() {
        return posizioneCodaSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getCodiceCausaleAnnullamentoSelector() {
        return codiceCausaleAnnullamentoSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getDescrizioneCausaleAnnullamentoSelector() {
        return descrizioneCausaleAnnullamentoSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getNuovaDASelector() {
        return nuovaDASelector;
    }

    public PropertySelector<SbcWlrResponse, String> getOraAppuntamentoSelector() {
        return oraAppuntamentoSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getOraContattoSelector() {
        return oraContattoSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getReferenteContattatoSelector() {
        return referenteContattatoSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getTelefonoReferenteContattatoSelector() {
        return telefonoReferenteContattatoSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getFasciaOrariaSelector() {
        return fasciaOrariaSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getNuovaDACSelector() {
        return nuovaDACSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getFlagPermessiSelector() {
        return flagPermessiSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getGiorniPrevistiSelector() {
        return giorniPrevistiSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getCodiceCausaleRimodulazioneSelector() {
        return codiceCausaleRimodulazioneSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getDescrizioneCausaleRimodulazioneSelector() {
        return descrizioneCausaleRimodulazioneSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getNuovaDataPrevistaSoluzioneSelector() {
        return nuovaDataPrevistaSoluzioneSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getCodiceCausaleSospensioneSelector() {
        return codiceCausaleSospensioneSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getDescrizioneCausaleSelector() {
        return descrizioneCausaleSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getCodiceFornitoreSelector() {
        return codiceFornitoreSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getCodiceOrdineFornitoreSelector() {
        return codiceOrdineFornitoreSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getStatoOrdineSelector() {
        return statoOrdineSelector;
    }

    public PropertySelector<SbcWlrResponse, String> getCodiceOrdineRichiedenteSelector() {
        return codiceOrdineRichiedenteSelector;
    }

    public PropertySelector<SbcWlrResponse, Boolean> getVariationSelector() {
        return variationSelector;
    }

    // Relation selectors
    public PropertySelector<SbcWlrResponse, OloCps> getOloSelector() {
        return oloSelector;
    }

    public PropertySelector<SbcWlrResponse, SbcFileResponse> getFileSelector() {
        return fileSelector;
    }
}
