--
-- (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
-- Source code generated by Celerio, a Jaxio product
-- Want to purchase Celerio ? email us at info@jaxio.com
-- Follow us on twitter: @springfuse
-- Documentation: http://www.jaxio.com/documentation/celerio/
-- Template pack-backend-jpa:src/main/sql/h2/01-create.p.vm.sql
--

DROP ALL objects;


-- =================================
-- TABLE BT_REQUEST 
-- =================================

CREATE TABLE BT_REQUEST (
	id INTEGER(10) not null,
	xml VARCHAR(3000),
	status VARCHAR(15),
	date_insert TIMESTAMP,
	file_id INTEGER(10));

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON BT_REQUEST (id);
ALTER TABLE BT_REQUEST ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE CPS_DEACTIVATION_NOTIFICATION 
-- =================================

CREATE TABLE CPS_DEACTIVATION_NOTIFICATION (
	id INTEGER(10) not null,
	codiceFornitore VARCHAR(20),
	dataNotifica TIMESTAMP not null,
	dn VARCHAR(20),
	dataSottoscrizioneContratto VARCHAR(20),
	codiceMotivoRifiuto VARCHAR(10),
	dataEsplitamento TIMESTAMP not null,
	motivoRifiuto VARCHAR(100),
	status VARCHAR(10));

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON CPS_DEACTIVATION_NOTIFICATION (id);
ALTER TABLE CPS_DEACTIVATION_NOTIFICATION ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE CPS_DEACTIVATION_PRENOTIFICATION 
-- =================================

CREATE TABLE CPS_DEACTIVATION_PRENOTIFICATION (
	id INTEGER(10) not null,
	codiceFornitore VARCHAR(20),
	codiceOrdineFornitore VARCHAR(20),
	dataNotifica TIMESTAMP not null,
	dn VARCHAR(20),
	dataSottoscrizioneContratto TIMESTAMP not null,
	dataPrevistaCessazione TIMESTAMP not null,
	cognomeRagSoc VARCHAR(30),
	nome VARCHAR(30),
	dataRichiestaCessazione TIMESTAMP not null,
	status CHAR(50));

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON CPS_DEACTIVATION_PRENOTIFICATION (id);
ALTER TABLE CPS_DEACTIVATION_PRENOTIFICATION ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE CPS_QUOTE_REQUEST 
-- =================================

CREATE TABLE CPS_QUOTE_REQUEST (
	id INTEGER(10) not null,
	codice_area SMALLINT(5) not null,
	descrizione_area VARCHAR(30) not null,
	quantita_richiesta SMALLINT(5) not null,
	mm SMALLINT(5) not null,
	yyyy SMALLINT(5) not null,
	status VARCHAR(50) not null,
	file_id INTEGER(10),
	olo INTEGER(10));

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON CPS_QUOTE_REQUEST (id);
ALTER TABLE CPS_QUOTE_REQUEST ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE CPS_QUOTE_RESPONSE 
-- =================================

CREATE TABLE CPS_QUOTE_RESPONSE (
	id INTEGER(10) not null,
	codiceArea CHAR(5),
	descrizioneArea CHAR(30),
	quantitaRichesta INTEGER(10),
	volumiMensiliAssegnati INTEGER(10),
	tolleranzaMensile INTEGER(10),
	volumiGiornalieriAssegnati INTEGER(10),
	tolleranzaGiornaliera INTEGER(10),
	giorniLavorativi INTEGER(10),
	file_id INTEGER(10),
	olo INTEGER(10));

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON CPS_QUOTE_RESPONSE (id);
ALTER TABLE CPS_QUOTE_RESPONSE ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE CPS_QUOTE_RESPONSE_PENALI 
-- =================================

CREATE TABLE CPS_QUOTE_RESPONSE_PENALI (
	id INTEGER(10) not null,
	totVolRichiestiDueMesiPrec INTEGER(10),
	totVolAssegnatiDueMesiPrec INTEGER(10),
	totVolEffettiviDueMesiPrec INTEGER(10),
	sogliaPenale INTEGER(10),
	percentualePenaleApplicata INTEGER(10),
	file_id INTEGER(10),
	olo INTEGER(10));

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON CPS_QUOTE_RESPONSE_PENALI (id);
ALTER TABLE CPS_QUOTE_RESPONSE_PENALI ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE OLO_CPS 
-- =================================

CREATE TABLE OLO_CPS (
	id INTEGER(10) not null,
	codice_olo VARCHAR(5) not null default '0',
	olo_descrizione VARCHAR(100),
	olo_dtinival TIMESTAMP,
	olo_dtfinval TIMESTAMP,
	codice_telecom CHAR(4));

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON OLO_CPS (id);
ALTER TABLE OLO_CPS ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE RESPONSE 
-- =================================

CREATE TABLE RESPONSE (
	id INTEGER(10) not null,
	idSBC INTEGER(10),
	actionType INTEGER(10),
	dataCambiamentoStato VARCHAR(50),
	codiceErrore VARCHAR(50),
	descrizioneErrore VARCHAR(200),
	nomeFileDiOrigineRichiesta VARCHAR(50),
	progressivo_richiesta VARCHAR(50),
	dataSpedizioneFile VARCHAR(50),
	tipoOperazione VARCHAR(50),
	tipoServizio VARCHAR(50),
	tipoLinea VARCHAR(50),
	tipoAttivazione VARCHAR(50),
	numeroLinee VARCHAR(50),
	cli VARCHAR(50),
	tipoNotifica VARCHAR(50),
	statoOrdine VARCHAR(50),
	type VARCHAR(3),
	dn VARCHAR(30),
	dataEsplitamento VARCHAR(30),
	codiceCausaleAnnullamento VARCHAR(30),
	descrizioneCausaleAnnullamento VARCHAR(30),
	dataAnnullamento VARCHAR(30),
	codiceCausaleSospensione VARCHAR(30),
	descrizioneCausale VARCHAR(30),
	dataSospensione VARCHAR(30),
	batchId INTEGER(10),
	olo_id INTEGER(10),
	variation BIT(1) default 'b''0''',
	response_code VARCHAR(255),
	response_desc VARCHAR(255));

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON RESPONSE (id);
ALTER TABLE RESPONSE ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE SBC_CPS_REQUEST 
-- =================================

CREATE TABLE SBC_CPS_REQUEST (
	cps_id INTEGER(10) not null,
	cli VARCHAR(15) not null,
	olo INTEGER(10),
	request_id VARCHAR(20),
	tipo_operazione CHAR(1),
	tipo_servizio VARCHAR(20),
	tipo_linea VARCHAR(20),
	tipo_attivazione VARCHAR(20),
	data_creazione TIMESTAMP,
	numero_linee INTEGER(10) default 0,
	user_information VARCHAR(200),
	file_id INTEGER(10),
	codice_errore INTEGER(10),
	descrizione_errore CHAR(250),
	stato_ordine VARCHAR(50),
	tipo_notifica VARCHAR(30));

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON SBC_CPS_REQUEST (cps_id);
CREATE UNIQUE INDEX IF NOT EXISTS request_id ON SBC_CPS_REQUEST (request_id);
ALTER TABLE SBC_CPS_REQUEST ALTER COLUMN cps_id IDENTITY;


-- =================================
-- TABLE SBC_CPS_RESPONSE 
-- =================================

CREATE TABLE SBC_CPS_RESPONSE (
	cps_id INTEGER(10) not null,
	cli VARCHAR(15) not null,
	olo INTEGER(10),
	tipo_notifica VARCHAR(30) not null,
	codice_fornitore VARCHAR(20),
	codice_ordine_fornitore VARCHAR(20),
	codice_richiedente VARCHAR(20),
	codice_ordine_richiedente VARCHAR(20),
	data_notifica TIMESTAMP,
	stato_ordine VARCHAR(50),
	data_espletamento TIMESTAMP,
	data_validazione_formale_contrattuale TIMESTAMP,
	data_validazione_tecnico_gestionale TIMESTAMP,
	data_DRO TIMESTAMP,
	data_estrazione_WL TIMESTAMP,
	classificazione_ordine VARCHAR(50),
	note VARCHAR(255),
	tipo_causale_rifiuto VARCHAR(50),
	codice_motivorifiuto VARCHAR(10),
	motivo_rifiuto VARCHAR(100),
	file_id INTEGER(10));

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON SBC_CPS_RESPONSE (cps_id);
ALTER TABLE SBC_CPS_RESPONSE ALTER COLUMN cps_id IDENTITY;


-- =================================
-- TABLE SBC_FILE_REQUEST 
-- =================================

CREATE TABLE SBC_FILE_REQUEST (
	id INTEGER(10) not null,
	nome_file VARCHAR(100) not null,
	data_creazione TIMESTAMP not null,
	olo VARCHAR(50) not null,
	stato VARCHAR(50) not null,
	row_number INTEGER(10),
	status VARCHAR(15));

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON SBC_FILE_REQUEST (id);
ALTER TABLE SBC_FILE_REQUEST ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE SBC_FILE_RESPONSE 
-- =================================

CREATE TABLE SBC_FILE_RESPONSE (
	id INTEGER(10) not null,
	nome_file VARCHAR(100) not null,
	data_creazione TIMESTAMP not null,
	olo VARCHAR(50) not null,
	stato VARCHAR(50) not null);

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON SBC_FILE_RESPONSE (id);
ALTER TABLE SBC_FILE_RESPONSE ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE SBC_WLR_REQUEST 
-- =================================

CREATE TABLE SBC_WLR_REQUEST (
	id INTEGER(10) not null,
	progressivo_richiesta VARCHAR(20),
	action_type INTEGER(10),
	wlr_type INTEGER(10),
	dn VARCHAR(20),
	flagMantenimento_prodotto INTEGER(10),
	dataSottoscrizione_contratto DATE,
	customer_surname VARCHAR(80),
	particella_toponomastica VARCHAR(10),
	via VARCHAR(20),
	civico VARCHAR(20),
	localita VARCHAR(30),
	codice_comune VARCHAR(20),
	cf_piva VARCHAR(20),
	data_dac DATE,
	type_service VARCHAR(10),
	tipe_line VARCHAR(10),
	amount INTEGER(10),
	customer_phone VARCHAR(16),
	olo INTEGER(10),
	file_id INTEGER(10),
	error VARCHAR(200),
	creation_date TIMESTAMP not null,
	rientro INTEGER(10),
	btExecuted BIT(1) default 'b''0''',
	sent_to_telecom BIT(1) default 'b''0''');

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON SBC_WLR_REQUEST (id);
CREATE UNIQUE INDEX IF NOT EXISTS progressivo_richiesta ON SBC_WLR_REQUEST (progressivo_richiesta);
ALTER TABLE SBC_WLR_REQUEST ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE SBC_WLR_REQUEST_VARIATION 
-- =================================

CREATE TABLE SBC_WLR_REQUEST_VARIATION (
	id INTEGER(10) not null,
	progressiveRichiesta VARCHAR(30),
	actionType INTEGER(10),
	wlrType INTEGER(10),
	dn VARCHAR(30),
	dataSottoscrizioneContratto DATE,
	customerSurname VARCHAR(70),
	serviceNumber VARCHAR(30),
	numberAdditional VARCHAR(30),
	codicePrestazione VARCHAR(30),
	aggiuntivo1 VARCHAR(30),
	aggiuntivo2 VARCHAR(30),
	aggiuntivo3 VARCHAR(30),
	aggiuntivo4 VARCHAR(30),
	aggiuntivo5 VARCHAR(30),
	aggiuntivo6 VARCHAR(30),
	aggiuntivo7 VARCHAR(30),
	codeMove VARCHAR(30),
	lineNumber VARCHAR(30),
	directionality VARCHAR(30),
	codeDriveType VARCHAR(30),
	file_Id INTEGER(10),
	olo INTEGER(10),
	status VARCHAR(15),
	waits INTEGER(10),
	elaborated BIT(1) default 'b''0''');

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON SBC_WLR_REQUEST_VARIATION (id);
ALTER TABLE SBC_WLR_REQUEST_VARIATION ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE SBC_WLR_RESPONSE 
-- =================================

CREATE TABLE SBC_WLR_RESPONSE (
	id INTEGER(10) not null,
	tipoNotifica VARCHAR(30),
	dataEstrazioneWL DATE,
	borchiaISDN VARCHAR(30),
	codicePiattaforma VARCHAR(30),
	dataAttivazione DATE,
	dataValidazioneFormaleContrattua DATE,
	dataValidazioneTecnicoGestionale DATE,
	dn VARCHAR(30),
	flagLineaBtsNaked VARCHAR(30),
	note VARCHAR(30),
	nuovoDN VARCHAR(30),
	cognomeReferente VARCHAR(30),
	nomeReferente VARCHAR(30),
	qualificaRef VARCHAR(30),
	telefonoFissoReferente VARCHAR(30),
	telefonoMobileReferente VARCHAR(30),
	codiceMotivoRifiuto VARCHAR(30),
	motivoRifiuto VARCHAR(300),
	tipoCausaleRifiuto VARCHAR(30),
	tipoDn VARCHAR(30),
	tipoLinea VARCHAR(30),
	codiceCausaleAccodamento VARCHAR(30),
	dataPrevistaSoluzione DATE,
	descrizioneCausaleAccodamento VARCHAR(30),
	dimensioneCoda VARCHAR(30),
	posizioneCoda VARCHAR(30),
	codiceCausaleAnnullamento VARCHAR(30),
	taAnnullamento DATE,
	descrizioneCausaleAnnullamento VARCHAR(30),
	dataEspletamento TIMESTAMP,
	dataContatto DATE,
	nuovaDA VARCHAR(30),
	oraAppuntamento VARCHAR(30),
	oraContatto VARCHAR(30),
	referenteContattato VARCHAR(30),
	telefonoReferenteContattato VARCHAR(30),
	taInizioLavorazione DATE,
	fasciaOraria VARCHAR(30),
	nuovaDAC VARCHAR(30),
	flagPermessi VARCHAR(30),
	giorniPrevisti VARCHAR(30),
	codiceCausaleRimodulazione VARCHAR(30),
	descrizioneCausaleRimodulazione VARCHAR(30),
	nuovaDataPrevistaSoluzione VARCHAR(30),
	codiceCausaleSospensione VARCHAR(30),
	dataSospensione DATE,
	descrizioneCausale VARCHAR(30),
	codiceFornitore VARCHAR(30),
	codiceOrdineFornitore VARCHAR(30),
	dataDRO DATE,
	dataNotifica DATE,
	statoOrdine VARCHAR(30),
	codiceOrdineRichiedente VARCHAR(30),
	file_Id INTEGER(10),
	olo INTEGER(10),
	variation BIT(1) default 'b''0''');

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON SBC_WLR_RESPONSE (id);
ALTER TABLE SBC_WLR_RESPONSE ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE WLR_REQUEST_AGGIUNTIVIS 
-- =================================

CREATE TABLE WLR_REQUEST_AGGIUNTIVIS (
	id INTEGER(10) not null,
	request_id INTEGER(10),
	aggiuntivi VARCHAR(30),
	completed BIT(1) default 'b''0''');

CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY ON WLR_REQUEST_AGGIUNTIVIS (id);
ALTER TABLE WLR_REQUEST_AGGIUNTIVIS ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE WLR_SERVICE_CODE 
-- =================================

CREATE TABLE WLR_SERVICE_CODE (
	optima_sts VARCHAR(20),
	telecom_sts VARCHAR(20));


-- =================================
-- TABLE WLR_TRASLOCO_CODE 
-- =================================

CREATE TABLE WLR_TRASLOCO_CODE (
	optima_sts VARCHAR(20),
	telecom_sts VARCHAR(20));


-- =================================
-- TABLE prefissi 
-- =================================

CREATE TABLE prefissi (
	codice_istat VARCHAR(15),
	comune VARCHAR(50),
	provincia VARCHAR(50),
	regione VARCHAR(50),
	prefisso VARCHAR(5),
	CAP VARCHAR(7),
	cod_fisco VARCHAR(10),
	abitanti INTEGER(10),
	link VARCHAR(50));


-- =================================
-- TABLE telecom_file_postfix 
-- =================================

CREATE TABLE telecom_file_postfix (
	current_data CHAR(8),
	number INTEGER(10),
	olo INTEGER(10),
	extension CHAR(4));

ALTER TABLE CPS_QUOTE_REQUEST ADD CONSTRAINT FK_SBC_CPS_QUOTE_SBC_FILE_REQUEST1 FOREIGN KEY (file_id) REFERENCES SBC_FILE_REQUEST (id);
ALTER TABLE CPS_QUOTE_REQUEST ADD CONSTRAINT FK_SBC_CPS_QUOTE_SBC_OLO1 FOREIGN KEY (olo) REFERENCES OLO_CPS (id);
ALTER TABLE CPS_QUOTE_RESPONSE ADD CONSTRAINT FK_SBC_CPS_QUOTE_RESPONSE_SBC_FILE_RESPONSE FOREIGN KEY (file_id) REFERENCES SBC_FILE_RESPONSE (id);
ALTER TABLE CPS_QUOTE_RESPONSE ADD CONSTRAINT FK_SBC_CPS_QUOTE_RESPONSE_SBC_OLO FOREIGN KEY (olo) REFERENCES OLO_CPS (id);
ALTER TABLE CPS_QUOTE_RESPONSE_PENALI ADD CONSTRAINT FK_SBC_CPS_QUOTE_RESPONSE_PENALI_SBC_OLO1 FOREIGN KEY (olo) REFERENCES OLO_CPS (id);
ALTER TABLE CPS_QUOTE_RESPONSE_PENALI ADD CONSTRAINT FK_SBC_CPS_QUOTE_RESPONSE_PENALI_SBC_FILE_RESPONSE1 FOREIGN KEY (file_id) REFERENCES SBC_FILE_RESPONSE (id);
ALTER TABLE SBC_CPS_REQUEST ADD CONSTRAINT FK_SBC_CPS_REQUEST_OLO_CPS FOREIGN KEY (olo) REFERENCES OLO_CPS (id);
ALTER TABLE SBC_CPS_REQUEST ADD CONSTRAINT FK_SBC_CPS_SBC_FILE_REQUEST FOREIGN KEY (file_id) REFERENCES SBC_FILE_REQUEST (id);
ALTER TABLE SBC_CPS_RESPONSE ADD CONSTRAINT FK_SBC_CPS_SBC_FILE_RESPONSE FOREIGN KEY (file_id) REFERENCES SBC_FILE_RESPONSE (id);
ALTER TABLE SBC_CPS_RESPONSE ADD CONSTRAINT FK_SBC_CPS_RESPONSE_OLO_CPS FOREIGN KEY (olo) REFERENCES OLO_CPS (id);
ALTER TABLE SBC_WLR_REQUEST ADD CONSTRAINT FK_SBC_WLR_REQUEST_FILE_SBC_FILE_REQUEST FOREIGN KEY (file_id) REFERENCES SBC_FILE_REQUEST (id);
ALTER TABLE SBC_WLR_REQUEST ADD CONSTRAINT FK_SBC_WLR_REQUEST_OLO_SBC_FILE_REQUEST FOREIGN KEY (olo) REFERENCES OLO_CPS (id);
ALTER TABLE SBC_WLR_REQUEST_VARIATION ADD CONSTRAINT FK_SBC_VAR_REQUEST_OLO_CPS FOREIGN KEY (olo) REFERENCES OLO_CPS (id);
ALTER TABLE SBC_WLR_REQUEST_VARIATION ADD CONSTRAINT FK_SBC_VAR_REQUEST_SBC_FILE_REQUEST FOREIGN KEY (file_Id) REFERENCES SBC_FILE_REQUEST (id);
ALTER TABLE SBC_WLR_RESPONSE ADD CONSTRAINT FK_SBC_WLR_RESPONSE_OLO_CPS FOREIGN KEY (olo) REFERENCES OLO_CPS (id);
ALTER TABLE SBC_WLR_RESPONSE ADD CONSTRAINT FK_SBC_WLR_RESPONSE_SBC_FILE_RESPONSE FOREIGN KEY (file_Id) REFERENCES SBC_FILE_RESPONSE (id);
ALTER TABLE WLR_REQUEST_AGGIUNTIVIS ADD CONSTRAINT FK_SBC_WLR_REQUEST_AGGIUNTIVI FOREIGN KEY (request_id) REFERENCES SBC_WLR_REQUEST (id);