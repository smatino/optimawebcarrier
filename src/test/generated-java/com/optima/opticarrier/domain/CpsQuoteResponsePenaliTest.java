/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/test/java/domain/ModelTest.e.vm.java
 */
package com.optima.opticarrier.domain;

import static org.fest.assertions.Assertions.assertThat;

import java.io.*;
import java.util.*;

import org.junit.Test;

import com.optima.opticarrier.util.ValueGenerator;

/**
 * Basic tests for CpsQuoteResponsePenali
 */
@SuppressWarnings("unused")
public class CpsQuoteResponsePenaliTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        CpsQuoteResponsePenali model = new CpsQuoteResponsePenali();
        assertThat(model.isIdSet()).isFalse();
    }

    @Test
    public void isIdSetReturnsTrue() {
        CpsQuoteResponsePenali model = new CpsQuoteResponsePenali();
        model.setId(ValueGenerator.getUniqueInteger());
        assertThat(model.getId()).isNotNull();
        assertThat(model.isIdSet()).isTrue();
    }

    //-------------------------------------------------------------
    // Many to One:  CpsQuoteResponsePenali.olo ==> OloCps.id
    //-------------------------------------------------------------

    @Test
    public void manyToOne_setOlo() {
        CpsQuoteResponsePenali many = new CpsQuoteResponsePenali();

        // init
        OloCps one = new OloCps();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setOlo(one);

        // make sure it is propagated properly
        assertThat(many.getOlo()).isEqualTo(one);

        // now set it to back to null
        many.setOlo(null);

        // make sure null is propagated properly
        assertThat(many.getOlo()).isNull();
    }

    @Test
    public void manyToOne_setFile() {
        CpsQuoteResponsePenali many = new CpsQuoteResponsePenali();

        // init
        SbcFileResponse one = new SbcFileResponse();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setFile(one);

        // make sure it is propagated properly
        assertThat(many.getFile()).isEqualTo(one);

        // now set it to back to null
        many.setFile(null);

        // make sure null is propagated properly
        assertThat(many.getFile()).isNull();
    }

    /*
     public void equalsUsingPk() {
     CpsQuoteResponsePenali model1 = new CpsQuoteResponsePenali();
     CpsQuoteResponsePenali model2 = new CpsQuoteResponsePenali();

     Integer id = ValueGenerator.getUniqueInteger();
     model1.setId(id);
     model2.setId(id);

     model1.setTotVolRichiestiDueMesiPrec(1);
     model2.setTotVolRichiestiDueMesiPrec(1);

     model1.setTotVolAssegnatiDueMesiPrec(1);
     model2.setTotVolAssegnatiDueMesiPrec(1);

     model1.setTotVolEffettiviDueMesiPrec(1);
     model2.setTotVolEffettiviDueMesiPrec(1);

     model1.setSogliaPenale(1);
     model2.setSogliaPenale(1);

     model1.setPercentualePenaleApplicata(1);
     model2.setPercentualePenaleApplicata(1);
     assertThat(model1.isIdSet()).isTrue();
     assertThat(model2.isIdSet()).isTrue();
     assertThat(model1.hashCode()).isEqualTo(model2.hashCode());
     assertThat(model1).isEqualTo(model2);
     assertThat(model2).isEqualTo(model1);
     }
     */
}